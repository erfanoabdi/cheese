Index: src/cheese-window.c
===================================================================
--- src/cheese-window.c	(revision 590)
+++ src/cheese-window.c	(working copy)
@@ -1202,6 +1202,8 @@
   cheese_window->webcam = cheese_webcam_new (cheese_window->screen, webcam_device);
   g_free (webcam_device);
 
+  cheese_webcam_setup (cheese_window->webcam);
+
   g_signal_connect (cheese_window->webcam, "photo-saved",
                     G_CALLBACK (cheese_window_photo_saved_cb), cheese_window);
   g_signal_connect (cheese_window->webcam, "video-saved",
Index: src/cheese-webcam.c
===================================================================
--- src/cheese-webcam.c	(revision 590)
+++ src/cheese-webcam.c	(working copy)
@@ -1081,14 +1097,20 @@
 cheese_webcam_init (CheeseWebcam *webcam)
 {
   CheeseWebcamPrivate* priv = CHEESE_WEBCAM_GET_PRIVATE (webcam);
-  gboolean ok;
 
   priv->is_recording = FALSE;
   priv->pipeline_is_playing = FALSE;
   priv->photo_filename = NULL;
   priv->webcam_devices = NULL;
   priv->device_name = NULL;
+}
 
+void
+cheese_webcam_setup (CheeseWebcam *webcam)
+{
+  CheeseWebcamPrivate* priv = CHEESE_WEBCAM_GET_PRIVATE (webcam);
+  gboolean ok = TRUE;
+
   cheese_webcam_detect_webcam_devices (webcam);
   cheese_webcam_create_video_display_bin (webcam);
   cheese_webcam_create_photo_save_bin (webcam);
@@ -1115,6 +1137,7 @@
   gdk_threads_leave();
 }
 
+
 CheeseWebcam*
 cheese_webcam_new (GtkWidget* video_window, char *webcam_device_name)
 {
@@ -1122,7 +1145,7 @@
   if (webcam_device_name)
   {
     webcam = g_object_new (CHEESE_TYPE_WEBCAM, "video-window", video_window, 
-                           "device_name", webcam_device_name, NULL);
+                           "device-name", webcam_device_name, NULL);
   }
   else
   {
Index: src/cheese-webcam.h
===================================================================
--- src/cheese-webcam.h	(revision 590)
+++ src/cheese-webcam.h	(working copy)
@@ -67,6 +67,7 @@
 
 GType		 cheese_webcam_get_type			(void);
 CheeseWebcam 	*cheese_webcam_new 			(GtkWidget *video_window, char *webcam_device_name);
+void 		 cheese_webcam_setup 			(CheeseWebcam *webcam);
 void 		 cheese_webcam_play 			(CheeseWebcam *webcam);
 void 		 cheese_webcam_stop 			(CheeseWebcam *webcam);
 void 		 cheese_webcam_set_effect 		(CheeseWebcam *webcam, CheeseWebcamEffect effect);
